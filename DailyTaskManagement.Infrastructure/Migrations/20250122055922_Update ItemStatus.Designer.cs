// <auto-generated />
using DailyTaskManagement.Infrastructure.DailyTaskDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DailyTaskManagement.Infrastructure.Migrations
{
    [DbContext(typeof(DailyTaskManagementDbContext))]
    [Migration("20250122055922_Update ItemStatus")]
    partial class UpdateItemStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DailyTaskManagement.Domain.Entities.ItemStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ItemStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemStatus");
                });

            modelBuilder.Entity("DailyTaskManagement.Domain.Entities.TodoItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemStatusId");

                    b.ToTable("TodoItem");
                });

            modelBuilder.Entity("DailyTaskManagement.Domain.Entities.TodoItem", b =>
                {
                    b.HasOne("DailyTaskManagement.Domain.Entities.ItemStatus", "ItemStatus")
                        .WithMany("TodoItems")
                        .HasForeignKey("ItemStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ItemStatus");
                });

            modelBuilder.Entity("DailyTaskManagement.Domain.Entities.ItemStatus", b =>
                {
                    b.Navigation("TodoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
